const [cart, setCart] = useState([]);

  const addToCart = (product) => {
    setCart([...cart, product]);
  };

const [data, setData] = useState(Categories);
  const [quantity, setQuantity] = useState(1);
  const [cart, setCart] = useState([]); 
  
  // Select the first item from the data array
  const item = data[1];

   // Calculate total price based on quantity
   const totalPrice = item.price * quantity;

   // Handle quantity change
   const handleQuantityChange = (e) => {
     setQuantity(parseInt(e.target.value, 10));
   };

   const handleRemove = () => {
    // Identify the item to remove based on its unique identifier, e.g., id
    const itemIdToRemove = item.id;

    // Filter out the item to remove from the cart
    const updatedCart = cart.filter((cartItem) => cartItem.id !== itemIdToRemove);

    // Update the cart state
    setCart(updatedCart);
  };



<label>
          Name:
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleInputChange}
          />
        </label>
        <br />
        <label>
          Email:
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleInputChange}
          />
        </label>
        <br />
        <label>
          Phone Number:
          <input
            type="tel"
            name="phoneNumber"
            value={formData.phoneNumber}
            onChange={handleInputChange}
          />
        </label>
        <br />
        <label>
          Location:
          <input
            type="text"
            name="location"
            value={formData.location}
            onChange={handleInputChange}
          />
        </label>
        <br />
        